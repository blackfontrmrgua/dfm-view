@import "./_Defs.scss";



%FormGroup {

  display: flex;
  align-items: center;
  justify-content: space-evenly;


  padding-block: 2px;
  padding-inline: 2px;
  background-color: rgba($color: #000000, $alpha: 0.3);
  border-radius: 20px;

  > .FormGroupName {
    font-weight: 400;
    text-align: center;
    flex-grow: 1;
    font-size: 0.8rem;
    cursor: default;
    line-height: 24px;
  }

  .FormGroupValue {
    flex-grow: 2;
  }

  input {
    padding: 0!important;
  }

}

%hovergraph {

  border-width: 1px;
  border-style: solid;
  border-color: transparent;
  border-radius: 19px;
  transition-property: color, border-color, background-color;
  transition-duration: 0.1s;
  transition-timing-function: linear;

  &:hover, &:focus {
    border-color: rgba($color: #ffd67e, $alpha: 1.0);
  }
}

.InputGroup {
  @extend %FormGroup;

  > input[type=number], > input[type=text] {
    text-align: center;
    font-size: 1em;
    min-height: 26px;
    box-sizing: border-box;
    background-color: rgba($color: #000000, $alpha: 0.3);

    @extend %hovergraph;
  }
}

.RadioGroup {
  @extend %FormGroup;
  > .RadioOne {
    > input {
      display: none;

      + label {
        flex-grow: 1;
        color: white;
        font-size: 0.9rem;

        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;

        min-height: 26px;
        box-sizing: border-box;
        @extend %hovergraph;
      }

      &:checked + label {
        background-color: rgb(255, 217, 92);
        color: black;
      }
    }
  }
}

.OneClickGroup {
  @extend %FormGroup;

  button {
    font-size: 0.8rem;
    min-height: 26px;
    box-sizing: border-box;
    border-radius: 19px;
  }
}

.DisposableInput {
  background-color: rgba($color: #000000, $alpha: 0.3);
  border-radius: 20px;
  padding: 2px;
  display: flex;
  height: 20px;

  input[type=number], input[type=text] {
    text-align: center;
    font-size: 0.9rem;
    background-color: transparent;
    box-sizing: border-box;
    padding: 0;
    flex-grow: 1;
  }

  button {
    outline: none;
    border-radius: 20px;
    width: 20px;
    height: 20px;
    padding: 0;
    vertical-align: baseline;
    background-color: transparent;
  }

  &:only-child button {
    display: none;
  }
}

.InputGroup {

  display: flex;
  align-items: center;
  justify-content: space-around;

}

.InputArea {
  display: flex;
  flex-direction: column;
  gap: 2px;
}

.SlotHeading {
  display: flex;
  color: var(--color);
  padding: 2px;
}


%FramedIcon {

  --frame-offset: calc(var(--icon-size) * 3 / 80);
  --frame-size: calc(var(--icon-size) + var(--frame-offset) * 2);
  
  user-select: none;
  position: relative;

  width: var(--frame-size);
  height: var(--frame-size);

  img.IconImage {
    display: block;
    position: relative;
    width: var(--icon-size);
    left: var(--frame-offset);
    top: var(--frame-offset);
  }

  img.IconFrame {
    display: block;
    position: absolute;
    width: var(--frame-size);
    top: 0;
    left: 0;
  }
}

.ItemIcon {
  @extend %FramedIcon;
}

.ItemName {

  align-self: center;

  &.Rarity_Common { color: #{$Common-color}; }

  &.Rarity_Uncommon { color: #{$Uncommon-color}; }

  &.Rarity_Rare { color: #{$Rare-color}; }

  &.Rarity_Unique { color: #{$Unique-color}; }

  &.Rarity_Epic { color: #{$Epic-color}; }

}


.RoundIcon {
  @extend %FramedIcon;
  clip-path: circle(50%);
  
  img.IconImage {
    border-radius: 50%;
  }

}

.SwitchNotification {
  color: $Unique-color;
}